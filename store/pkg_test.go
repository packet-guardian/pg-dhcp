package store

import (
	"net"
	"time"

	"github.com/packet-guardian/pg-dhcp/models"
)

var leaseTests = []struct {
	data   []byte
	actual *models.Lease
}{
	{
		data: []byte{0xa, 0x0, 0x2, 0x5, 0xab, 0xcd, 0xef, 0x12, 0x34, 0x56, 0x0, 0x1, 0xd0, 0xf9, 0x87, 0x90, 0xb, 0x0, 0x0, 0x0, 0xa0, 0x89, 0x88, 0x90, 0xb, 0x0, 0x0, 0x0, 0xa, 0x4e, 0x65, 0x74, 0x77, 0xc3, 0xb6, 0x72, 0x6b, 0x20, 0x31, 0x53, 0x6f, 0x6d, 0x65, 0x20, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x64, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68},
		actual: &models.Lease{
			IP:          net.ParseIP("10.0.2.5").To4(),
			MAC:         net.HardwareAddr([]byte{0xab, 0xcd, 0xef, 0x12, 0x34, 0x56}),
			Network:     "Netwörk 1",
			Start:       time.Unix(1493237352, 0),
			End:         time.Unix(1493238352, 0),
			Hostname:    "Some hostname that is a decent length",
			IsAbandoned: false,
			Registered:  true,
		},
	},
	{
		data: []byte{0xa, 0x0, 0x2, 0x6, 0xab, 0xcd, 0xef, 0x12, 0x34, 0x56, 0x0, 0x1, 0xd0, 0xf9, 0x87, 0x90, 0xb, 0x0, 0x0, 0x0, 0xa0, 0x89, 0x88, 0x90, 0xb, 0x0, 0x0, 0x0, 0xa, 0x4e, 0x65, 0x74, 0x77, 0xc3, 0xb6, 0x72, 0x6b, 0x20, 0x31},
		actual: &models.Lease{
			IP:          net.ParseIP("10.0.2.6").To4(),
			MAC:         net.HardwareAddr([]byte{0xab, 0xcd, 0xef, 0x12, 0x34, 0x56}),
			Network:     "Netwörk 1",
			Start:       time.Unix(1493237352, 0),
			End:         time.Unix(1493238352, 0),
			Hostname:    "",
			IsAbandoned: false,
			Registered:  true,
		},
	},
	{
		data: []byte{0xa, 0x0, 0x2, 0x7, 0xab, 0xcd, 0xef, 0x12, 0x34, 0x56, 0x0, 0x1, 0xd0, 0xf9, 0x87, 0x90, 0xb, 0x0, 0x0, 0x0, 0xa0, 0x89, 0x88, 0x90, 0xb, 0x0, 0x0, 0x0, 0x0},
		actual: &models.Lease{
			IP:          net.ParseIP("10.0.2.7").To4(),
			MAC:         net.HardwareAddr([]byte{0xab, 0xcd, 0xef, 0x12, 0x34, 0x56}),
			Network:     "",
			Start:       time.Unix(1493237352, 0),
			End:         time.Unix(1493238352, 0),
			Hostname:    "",
			IsAbandoned: false,
			Registered:  true,
		},
	},
}
